Class Name;XML NSI;Normal Name;Kategory;Use Serial;Is Static;All setters implemented;pass through extern update impuls;Requires an Extention;Extention-MID;Input-Connections;Output-Connections;Parameters;Description;Use Timer;Is Lua Node
node_nbdi;nbdi;Digital Input;Basic IO;TRUE;FALSE;TRUE;FALSE;TRUE;eqri;;[0,bool,state_out]%;[0,int,mid]%[1,string,msi]%[2,string,gpio_id,(0 1 2 3)]%;Read the state of the selected digital input from a EQRI extention;TRUE;FALSE
node_nbdo;nbdo;Digital Output;Basic IO;TRUE;FALSE;TRUE;FALSE;TRUE;eqro;[0,bool,state_in]%;;[0,int,mid]%[1,string,msi]%[2,string,gpio_id,(0 1 2 3)]%;Set the state of the selected digital output fromt the connected EQRO extention;TRUE;FALSE
node_bndmx;bndmx;DMX Output;Basic IO;TRUE;FALSE;TRUE;FALSE;TRUE;bndmx;[0,int,channel_value]%;;[0,int,mid]%[1,string,msi]%[2,int,channel,(1-255)]%;Write a Value to the dmx bux please use as mid: 0 to use ther internal dmx interface;TRUE;FALSE
node_bndisp;bnidisp;Intern Information Display;Basic IO;TRUE;FALSE;TRUE;FALSE;TRUE;bnid;[0,string,line_string]%;;[0,int,mid]%[1,string,msi]%[2,string,line_number,(0 1)]%;Writes a string to the selected row of the Display Extenttion if you choose as mid 0 you can write to the intern dispaly;TRUE;FALSE
node_bland;bland;AND Gate;Logic;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,bool,input A]%[1,bool,input B]%;[2,bool,state_out]%;;A standard AND-Gate. If both inputs are true. The output is true too;TRUE;FALSE
node_blor;blor;OR Gate;Logic;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,bool,input A]%[1,bool,input B]%;[2,bool,state_out]%;;A standard OR-Gate. If only one of the inputs  true. The output is true too;TRUE;FALSE
node_blxor;blxor;XOR Gate;Logic;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,bool,input A]%[1,bool,input B]%;[2,bool,state_out]%;;A standard XOR-Gate. If the inputs a different, returns true;TRUE;FALSE
node_blnot;blnot;NOT Gate;Logic;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,bool,input]%;[1,bool,state_out]%;;This gate inverts his input;TRUE;FALSE
node_blbuffer;blbuffer;BUFFER Gate;Logic;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,bool,input]%;[1,bool,state_out]%;;This gate returns his input;TRUE;FALSE
node_bifte;bifte;If then else INT;Flow Control;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,bool,input,toggle]%[1,int,value 1]%[2,int,value 2]%;[3,int,value_out]%;;;TRUE;FALSE
node_biftest;biftest;If then else String;Flow Control;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,bool,input,toggle]%[1,string,value 1]%[2,string,value 2]%;[3,string,value_out]%;;;TRUE;FALSE
node_biftefl;biftefl;If then else Float;Flow Control;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,bool,input,toggle]%[1,float,value 1]%[2,float,value 2]%;[3,float,value_out]%;;;TRUE;FALSE
node_intcomp;intcomp;Compare Int;Flow Control;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,int,input A]%[1,int,input B]%;[2,bool,state_out]%;[0,string,operation,(==,>=,<=,<,>,!=)]%;;TRUE;FALSE
node_floatcomp;floatcomp;Compare Float;Flow Control;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,float,input A]%[1,float,input B]%;[2,bool,state_out]%;[0,string,operation,(==,>=,<=,<,>,!=)]%;;TRUE;FALSE
node_strcomp;strcomp;Compare String;Flow Control;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,string,input A]%[1,string,input B]%;[2,bool,state_out]%;[0,string,operation,(== >= <= < > !=)]%;;TRUE;FALSE
node_blfrs;blfrs;RS Flip Flop;Logic;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,bool,set_state]%[1,bool,reset_state]%;[2,bool,state_out]%;;This gate represents a Reset/Set logic gatter.Set the output to true with a rising edge on the set input , or to false with a rising edge on the reset input;TRUE;FALSE
node_blft;blft;T Flip Flop;Logic;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,bool,toggle_input]%;[1,bool,state_out]%;;This gate represents a T-FlipFlop logic gate. With a rising edge on the input you can toggle the output value;TRUE;FALSE
node_nbcoin;nbcoin;Constant Int Value;Misc;FALSE;TRUE;TRUE;FALSE;FALSE;;;[0,int,output_value]%;[0,int,constant value]%;;TRUE;FALSE
node_nbcost;nbcost;Constant String Value;Misc;FALSE;TRUE;TRUE;FALSE;FALSE;;;[0,string,output_value]%;[0,string,constant value]%;;TRUE;FALSE
node_nbcofl;nbcofl;Constant Float Value;Misc;FALSE;TRUE;TRUE;FALSE;FALSE;;;[0,float,output_value]%;[0,float,constant value]%;;TRUE;FALSE
node_nbcobot;nbcobot;Constant Bool true;Misc;FALSE;TRUE;TRUE;FALSE;FALSE;;;[0,bool,output_value]%;;;TRUE;FALSE
node_nbcobof;nbcofl;Constant Bool False;Misc;FALSE;TRUE;TRUE;FALSE;FALSE;;;[0,bool,output_value]%;;;TRUE;FALSE
node_nbsttoi;nbsttoi;String to Int;Converters;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,string,input]%;[1,int,output]%;;This node converts a string value to an int value;TRUE;FALSE
node_nbsttof;nbsttof;String to Float;Converters;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,string,input]%;[1,float,output]%;;This node converts a string value to an float value;TRUE;FALSE
node_nbitof;nbitof;Int to String;Converters;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,float,input]%;[1,int,output]%;;This node converts a float value to an int value;TRUE;FALSE
node_nbftoi;nbftoi;Float to Int;Converters;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,float,input]%;[1,int,output]%;;This node converts a float value to an int value;TRUE;FALSE
node_nbinttostr;nbinttostr;Int to String;Converters;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,int,input]%;[1,string,output]%;;This node converts a int value to an string value;TRUE;FALSE
node_nbfltostr;nbfltostr;Float to String;Converters;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,float,input]%;[1,string,output]%;;This node converts a float value to an string value;TRUE;FALSE
node_ctimest;ctimest;Timestamp;Time;FALSE;FALSE;TRUE;FALSE;FALSE;;;[0,int, current timestamp]%;;Returns the current system timestamp;TRUE;FALSE
node_tstoint;tstoint;Split TimeStamp;Converters;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,int,timestamp_in]%;[1,int,day]%[2,int,month]%[3,int,year]%[4,int,seconds]%[5,int,minutes]%[6,int,hours]%[7,string,date_string]%[8,string,timestring without seconds]%[9,string,timestring]%;;With the TimeStamp split node you can split a timestamp into several int values: Hours, Minutes, Seconds, Year, Month, Day;TRUE;FALSE
node_basetimer;basetimer;Basic Timer;Time;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,float, interval]%[1,bool, start timer]%[2,bool, stop timer]%[3,bool, reset timer]%;[4,float,current time]%[5,bool,is running]%;;A basic timer node to create countdowns, with the output you can create intervaltimer, countups;TRUE;FALSE
node_phhlux;phhlux;Philips Hue Lux;Other;FALSE;FALSE;TRUE;FALSE;TRUE;Philips-Hue-Bridge;[0,int,brighness]%;;[0,string,Bridge-IP]%[1,string,Username]%[2,int,Lamp-ID,(1-50)]%;Control your Philips Hue Lux Lamps (white ones only);TRUE;FALSE
node_opwemare;opwemare;OpenWeatherMap;Other;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,bool,update_toggle]%;[1,string,request_output]%;[0,string,API-Key]%[1,string,City-ID]%[2,string,Value-Key,(temp pressure humidity temp_min temp_max sunrise sunset)]%;With this node you can get Weatherdata from the OpenWeatherMap Service, to use this node you must create a account on the Servicewebsite;TRUE;FALSE
node_simplemath;simplemath;Base Calc;Math;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,float,value 1]%[1,float,value 2]%;[2,float,output value]%;[0,string,Math-Operation,(add sub min max dif mod dim pow)]%;Performs basic math operations (+ , -, *, /, min, max, mod, pow);TRUE;FALSE
node_basiccounter;basiccounter;Basic Counter;Math;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,bool,trigger]%[1,float,inc_value]%[2,bool,set_zero]%;[3,float,output value]%;;This node increments the output value with a specific value at a rising edge;TRUE;FALSE
node_stringappend;stringappend;String append;Misc;FALSE;FALSE;TRUE;FALSE;FALSE;;[0,string,part1]%[1,string,part2]%;[3,string,output value]%;;Appends a string to an other;TRUE;FALSE
node_stringoffset;string offset;String offset;Misc;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,string,input string]%[1,int,offset]%;[2,string,return string]%;;With this node you can remove a spcific lenght of the start of the string.;TRUE;FALSE
node_stringsplit;stringsplit;String Split;Misc;FALSE;FALSE;TRUE;TRUE;FALSE;;[0,string,input]%;[1,string,split extract value]%[2,string,rest value]%;[0,string,Search-String]%;This node serarch until the needlestring and returns the both splitted parts.;TRUE;FALSE
node_eowt;eowt;One Wire Temperature;Basic IO;TRUE;FALSE;TRUE;FALSE;TRUE;eowt;;[0,float,temp_out]%;[0,int,mid]%[1,string,msi]%[2,int,sensor_id,(0-50)]%;With this node you can read temperature data from one wire temp sensors DS…;TRUE;FALSE
node_nbss;nbss;Serial Send;Basic IO;TRUE;FALSE;TRUE;FALSE;FALSE;;[0,string,message]%;;;Sends a Message to the global Serial bus (automatic adds a new line on the end;TRUE;FALSE
node_nbsr;nbsr;Serial Recieve;Basic IO;TRUE;FALSE;TRUE;FALSE;FALSE;;;[0,string,message]%;;With this node you can get all data recieved from the global serial bus;TRUE;FALSE
node_generic_lua;generic_lua_node;GENERIC_LUA_NODE;LUA;TRUE;FALSE;TRUE;FALSE;FALSE;;[0,bool,state_in]%;[1,bool,state_out]%;;g lua node;TRUE;TRUE
